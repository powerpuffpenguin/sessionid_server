{
  "swagger": "2.0",
  "info": {
    "title": "manager/manager.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Manager"
    },
    {
      "name": "Provider"
    },
    {
      "name": "Logger"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/logger": {
      "get": {
        "summary": "return logger level",
        "operationId": "Logger_Level",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerLevelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Logger"
        ]
      }
    },
    "/api/v1/logger/console/{level}": {
      "post": {
        "summary": "set console level",
        "operationId": "Logger_Console",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConsoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "level",
            "description": "debug info warn error dpanic panic fatal",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Logger"
        ]
      }
    },
    "/api/v1/logger/file/{level}": {
      "post": {
        "summary": "set file level",
        "operationId": "Logger_File",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "level",
            "description": "debug info warn error dpanic panic fatal",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Logger"
        ]
      }
    },
    "/api/v1/manager": {
      "post": {
        "summary": "Create an authorization token",
        "operationId": "Manager_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/managerCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managerCreateRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      },
      "put": {
        "summary": "Refresh access and refresh token",
        "operationId": "Manager_Refresh",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/managerRefreshResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managerRefreshRequest"
            }
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/api/v1/manager/access/{access}": {
      "delete": {
        "summary": "Remove token by access token",
        "operationId": "Manager_RemoveAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/managerRemoveAccessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "access",
            "description": "access token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/api/v1/manager/id/{id}": {
      "delete": {
        "summary": "Remove token by id",
        "operationId": "Manager_RemoveID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/managerRemoveIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "CreateRequest.id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/api/v1/manager/verify/{access}": {
      "post": {
        "summary": "Verify access token signature",
        "operationId": "Manager_Verify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/managerVerifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "access",
            "description": "access token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Manager"
        ]
      }
    },
    "/api/v1/provider": {
      "post": {
        "summary": "Store tokens in the backend",
        "operationId": "Provider_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/providerCreateRequest"
            }
          }
        ],
        "tags": [
          "Provider"
        ]
      }
    },
    "/api/v1/provider/access/{access}": {
      "get": {
        "summary": "Return the key-value pair associated with the token",
        "operationId": "Provider_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "access",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Provider"
        ]
      },
      "delete": {
        "summary": "Remove token by access token",
        "operationId": "Provider_RemoveAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerRemoveAccessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "access",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Provider"
        ]
      },
      "put": {
        "summary": "Update the key-value pair associated with the token",
        "operationId": "Provider_Put",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerPutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "access",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/providerPutRequest"
            }
          }
        ],
        "tags": [
          "Provider"
        ]
      }
    },
    "/api/v1/provider/id/{id}": {
      "delete": {
        "summary": "Remove token by id",
        "operationId": "Provider_RemoveID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerRemoveIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Provider"
        ]
      }
    },
    "/api/v1/provider/keys/{access}": {
      "get": {
        "summary": "Returns the key associated with the token",
        "operationId": "Provider_Keys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "access",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Provider"
        ]
      },
      "delete": {
        "summary": "Delete the key associated with the token",
        "operationId": "Provider_RemoveKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerRemoveKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "access",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "keys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Provider"
        ]
      }
    },
    "/api/v1/provider/refresh": {
      "post": {
        "summary": "Update the token stored in the backend",
        "operationId": "Provider_Refresh",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerRefreshResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/providerRefreshRequest"
            }
          }
        ],
        "tags": [
          "Provider"
        ]
      }
    },
    "/api/v1/provider/verify/{access}": {
      "post": {
        "summary": "Verify token status",
        "operationId": "Provider_Verify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/providerVerifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "access",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Provider"
        ]
      }
    }
  },
  "definitions": {
    "loggerConsoleResponse": {
      "type": "object"
    },
    "loggerFileResponse": {
      "type": "object"
    },
    "loggerLevelResponse": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        },
        "console": {
          "type": "string"
        }
      }
    },
    "managerCreateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "create authorization token associated with id, usually the client platform and user id.\n\nlike this :\n* web-1\n* android-1\n* ios-1"
        },
        "pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/managerPair"
          },
          "title": "Initialization key-value pair associated with token"
        }
      }
    },
    "managerCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "provider id"
        },
        "access": {
          "type": "string",
          "title": "access token"
        },
        "refresh": {
          "type": "string",
          "title": "refresh token"
        }
      }
    },
    "managerPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key name\n__private_provider_redis is reserved on redis backend"
        },
        "value": {
          "type": "string",
          "format": "byte",
          "title": "serialized binary data, it is recommended to use json serialization"
        }
      }
    },
    "managerRefreshRequest": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string",
          "title": "old access token"
        },
        "refresh": {
          "type": "string",
          "title": "old refresh token"
        }
      }
    },
    "managerRefreshResponse": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string",
          "title": "new access token"
        },
        "refresh": {
          "type": "string",
          "title": "new refresh token"
        }
      }
    },
    "managerRemoveAccessResponse": {
      "type": "object"
    },
    "managerRemoveIDResponse": {
      "type": "object"
    },
    "managerVerifyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "provider id"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "providerCreateRequest": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "refresh": {
          "type": "string"
        },
        "pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/providerPair"
          }
        }
      }
    },
    "providerCreateResponse": {
      "type": "object"
    },
    "providerGetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/providerValue"
          }
        }
      }
    },
    "providerKeysResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "providerPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "providerPutRequest": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/providerPair"
          }
        }
      }
    },
    "providerPutResponse": {
      "type": "object"
    },
    "providerRefreshRequest": {
      "type": "object",
      "properties": {
        "access": {
          "type": "string"
        },
        "refresh": {
          "type": "string"
        },
        "newAccess": {
          "type": "string"
        },
        "newRefresh": {
          "type": "string"
        }
      }
    },
    "providerRefreshResponse": {
      "type": "object"
    },
    "providerRemoveAccessResponse": {
      "type": "object"
    },
    "providerRemoveIDResponse": {
      "type": "object"
    },
    "providerRemoveKeysResponse": {
      "type": "object"
    },
    "providerValue": {
      "type": "object",
      "properties": {
        "bytes": {
          "type": "string",
          "format": "byte"
        },
        "exists": {
          "type": "boolean"
        }
      }
    },
    "providerVerifyResponse": {
      "type": "object"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
